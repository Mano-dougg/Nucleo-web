// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for blogg documents
 */
interface BloggDocumentData {
  /**
   * Titulo field in *blogg*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blogg.titulo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  titulo: prismic.RichTextField;

  /**
   * Subtitulo field in *blogg*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blogg.subtitulo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitulo: prismic.RichTextField;

  /**
   * Paragrafo field in *blogg*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blogg.paragrafo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  paragrafo: prismic.RichTextField;

  /**
   * ImagemRobo field in *blogg*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blogg.imagemrobo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  imagemrobo: prismic.ImageField<never>;
}

/**
 * blogg document from Prismic
 *
 * - **API ID**: `blogg`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BloggDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<BloggDocumentData>, "blogg", Lang>;

export type AllDocumentTypes = BloggDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type { BloggDocument, BloggDocumentData, AllDocumentTypes };
  }
}
