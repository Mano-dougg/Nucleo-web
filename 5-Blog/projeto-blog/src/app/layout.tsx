import { Rubik } from 'next/font/google'
import type { Metadata } from 'next'
import "./globals.css";
import { createClient } from '@/prismicio';

import Header from "@/components/Header";
import Footer from '@/components/Footer';

// export async function generateMetadata(): Promise<Metadata> {

//   const client = createClient();

//   const settings = await client.getSingle("settings") //depois que adicionar a pasta em custom types single

//   return {
//     title: settings.data.site_title || "Blog fallback", // s√≥ depois de adicionar
//     description: settings.data.meta_description || "Blog fallback",
//     openGraph: {
//       images: [settings.data.og_image.url || ""],
//     },
//   }
// }
 
// const inter = Inter({
//   subsets: ['latin'],
//   variable: '--font-inter',
//   display: 'swap',
// })
 
// const montserrat = Montserrat({
//   subsets: ['latin'],
//   variable: '--font-montserrat',
//   display: 'swap',
// })

const rubik = Rubik({
  subsets: ['latin'],
  display: 'swap',
})
 
export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="pt-br" className={rubik.className}>
      
      <body>
        <Header/>
        {children}
        <Footer/>
      </body>
      
    </html>
  )
}


// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Blog",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,

// }: Readonly<{

//   children: React.ReactNode;

// }>) {

//   return (

//     <html lang="en">
//       <body className={inter.className}>{children}</body>
//     </html>
//   );

// }
