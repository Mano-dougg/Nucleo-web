"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/server/GETOrder.service.ts":
/*!****************************************!*\
  !*** ./src/server/GETOrder.service.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSoldBreadsCount: function() { return /* binding */ getSoldBreadsCount; },\n/* harmony export */   getSoldBreadsValue: function() { return /* binding */ getSoldBreadsValue; },\n/* harmony export */   receiveOpenOrders: function() { return /* binding */ receiveOpenOrders; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// ## Funções que farão as requisições do tipo GET:\n// ### Função de requisição para pedidos terminados\nasync function getClosedOrders() {\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"http://localhost:3000/api/order/closed\");\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        return [];\n    }\n}\n// ### Função de requisição para pedidos em aberto\nasync function getOpenOrders() {\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"http://localhost:3000/api/order/open\");\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        return [];\n    }\n}\n// ## Funções para tratar os dados e receber da forma conveniente a ser usada\nconst getBreadsCount = async (order)=>{\n    let totalBreads = 0;\n    order.forEach((order)=>{\n        order.bread.forEach((bread)=>{\n            totalBreads += bread.quantity;\n        });\n    });\n    return totalBreads;\n};\nconst getBreadsValues = async (order)=>{\n    return order.reduce((keep, current)=>keep + current.total, 0);\n};\nconst getOrderData = (orders)=>{\n    return orders.map((order)=>({\n            name: order.clientName,\n            breadCount: order.bread.reduce((keep, actual)=>keep + actual.quantity, 0),\n            valor: order.total\n        }));\n};\n// ## Pegar dados de pedidos fechados\nasync function getSoldBreadsCount() {\n    const orders = await getClosedOrders();\n    let totalBreads = 0;\n    if (orders) {\n        totalBreads += await getBreadsCount(orders);\n    }\n    return totalBreads;\n}\nasync function getSoldBreadsValue() {\n    const orders = await getClosedOrders();\n    let totalBreads = 0;\n    if (orders) {\n        totalBreads += await getBreadsValues(orders);\n    }\n    return totalBreads;\n}\n// ## Pegar dados de pedidos em aberto\nasync function receiveOpenOrders() {\n    const orders = await getOpenOrders();\n    const minimizedOrders = getOrderData(orders);\n    return minimizedOrders;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2ZXIvR0VUT3JkZXIuc2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRTBCO0FBc0IxQixtREFBbUQ7QUFFbkQsbURBQW1EO0FBQ25ELGVBQWVDO0lBQ1gsSUFBSTtRQUNBLE1BQU1DLFdBQVcsTUFBTUYsNkNBQUtBLENBQUNHLEdBQUcsQ0FBQztRQUNqQyxPQUFPRCxTQUFTRSxJQUFJO0lBQ3hCLEVBQUUsT0FBT0MsT0FBWTtRQUNqQkMsUUFBUUMsR0FBRyxDQUFDRjtRQUNaLE9BQU8sRUFBRTtJQUNiO0FBQ0o7QUFFQSxrREFBa0Q7QUFDbEQsZUFBZUc7SUFDWCxJQUFJO1FBQ0EsTUFBTU4sV0FBVyxNQUFNRiw2Q0FBS0EsQ0FBQ0csR0FBRyxDQUFDO1FBQ2pDLE9BQU9ELFNBQVNFLElBQUk7SUFDeEIsRUFBRSxPQUFPQyxPQUFZO1FBQ2pCQyxRQUFRQyxHQUFHLENBQUNGO1FBQ1osT0FBTyxFQUFFO0lBQ2I7QUFFSjtBQUVBLDZFQUE2RTtBQUU3RSxNQUFNSSxpQkFBaUIsT0FBT0M7SUFDMUIsSUFBSUMsY0FBYztJQUNsQkQsTUFBTUUsT0FBTyxDQUFDLENBQUNGO1FBQ1hBLE1BQU1HLEtBQUssQ0FBQ0QsT0FBTyxDQUFDQyxDQUFBQTtZQUNsQkYsZUFBZUUsTUFBTUMsUUFBUTtRQUMvQjtJQUNGO0lBRUYsT0FBT0g7QUFDWDtBQUVBLE1BQU1JLGtCQUFrQixPQUFPTDtJQUMzQixPQUFPQSxNQUNOTSxNQUFNLENBQUMsQ0FBQ0MsTUFBTUMsVUFBWUQsT0FBS0MsUUFBUUMsS0FBSyxFQUFHO0FBQ3BEO0FBR0EsTUFBTUMsZUFBZSxDQUFDQztJQUNsQixPQUFPQSxPQUFPQyxHQUFHLENBQUMsQ0FBQ1osUUFBUztZQUN4QmEsTUFBS2IsTUFBTWMsVUFBVTtZQUNyQkMsWUFBV2YsTUFBTUcsS0FBSyxDQUNyQkcsTUFBTSxDQUFDLENBQUNDLE1BQU1TLFNBQVVULE9BQUtTLE9BQU9aLFFBQVEsRUFBRTtZQUMvQ2EsT0FBTWpCLE1BQU1TLEtBQUs7UUFDckI7QUFDSjtBQUVBLHFDQUFxQztBQUM5QixlQUFlUztJQUNsQixNQUFNUCxTQUFTLE1BQU1wQjtJQUNyQixJQUFJVSxjQUFjO0lBQ2xCLElBQUdVLFFBQU87UUFDTlYsZUFBZSxNQUFNRixlQUFlWTtJQUN4QztJQUNBLE9BQU9WO0FBRVg7QUFFTyxlQUFla0I7SUFFbEIsTUFBTVIsU0FBUyxNQUFNcEI7SUFDckIsSUFBSVUsY0FBYztJQUNsQixJQUFHVSxRQUFPO1FBQ05WLGVBQWUsTUFBTUksZ0JBQWdCTTtJQUN6QztJQUNBLE9BQU9WO0FBQ1g7QUFFQSxzQ0FBc0M7QUFHL0IsZUFBZW1CO0lBQ2xCLE1BQU1ULFNBQVMsTUFBTWI7SUFDckIsTUFBTXVCLGtCQUFrQlgsYUFBYUM7SUFDckMsT0FBT1U7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmVyL0dFVE9yZGVyLnNlcnZpY2UudHM/YzMxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG4vLyAjIyBEZWNsYXJhw6fDo28gZG9zIHRpcG9zOlxyXG5cclxudHlwZSBPcmRlciA9IHtcclxuICAgIGlkOm51bWJlcjtcclxuICAgIGNsaWVudE5hbWU6IHN0cmluZztcclxuICAgIGJyZWFkOiB7XHJcbiAgICAgICAgbmFtZTogc3RyaW5nO1xyXG4gICAgICAgIHVuaXRhcnlWYWx1ZTpudW1iZXI7XHJcbiAgICAgICAgcXVhbnRpdHk6IG51bWJlcjtcclxuICAgICAgICB0b3RhbDpudW1iZXI7XHJcbiAgICB9W11cclxuICAgIHRvdGFsOm51bWJlclxyXG59XHJcblxyXG5leHBvcnQgdHlwZSBPcmRlclRvVXNlID0ge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgYnJlYWRDb3VudDogbnVtYmVyO1xyXG4gICAgdmFsb3I6IG51bWJlcjtcclxufVxyXG5cclxuLy8gIyMgRnVuw6fDtWVzIHF1ZSBmYXLDo28gYXMgcmVxdWlzacOnw7VlcyBkbyB0aXBvIEdFVDpcclxuXHJcbi8vICMjIyBGdW7Dp8OjbyBkZSByZXF1aXNpw6fDo28gcGFyYSBwZWRpZG9zIHRlcm1pbmFkb3NcclxuYXN5bmMgZnVuY3Rpb24gZ2V0Q2xvc2VkT3JkZXJzKCk6IFByb21pc2U8T3JkZXJbXT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9vcmRlci9jbG9zZWQnKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YSBhcyBPcmRlcltdO1xyXG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vICMjIyBGdW7Dp8OjbyBkZSByZXF1aXNpw6fDo28gcGFyYSBwZWRpZG9zIGVtIGFiZXJ0b1xyXG5hc3luYyBmdW5jdGlvbiBnZXRPcGVuT3JkZXJzICgpOiBQcm9taXNlPE9yZGVyW10+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvb3JkZXIvb3BlbicpO1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhIGFzIE9yZGVyW107XHJcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbn0gXHJcblxyXG4vLyAjIyBGdW7Dp8O1ZXMgcGFyYSB0cmF0YXIgb3MgZGFkb3MgZSByZWNlYmVyIGRhIGZvcm1hIGNvbnZlbmllbnRlIGEgc2VyIHVzYWRhXHJcblxyXG5jb25zdCBnZXRCcmVhZHNDb3VudCA9IGFzeW5jIChvcmRlcjpPcmRlcltdKTpQcm9taXNlPG51bWJlcj4gPT4ge1xyXG4gICAgbGV0IHRvdGFsQnJlYWRzID0gMDtcclxuICAgIG9yZGVyLmZvckVhY2goKG9yZGVyOk9yZGVyKSA9PiB7XHJcbiAgICAgICAgb3JkZXIuYnJlYWQuZm9yRWFjaChicmVhZCA9PiB7XHJcbiAgICAgICAgICB0b3RhbEJyZWFkcyArPSBicmVhZC5xdWFudGl0eTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRvdGFsQnJlYWRzO1xyXG59XHJcblxyXG5jb25zdCBnZXRCcmVhZHNWYWx1ZXMgPSBhc3luYyAob3JkZXI6T3JkZXJbXSk6UHJvbWlzZTxudW1iZXI+ID0+IHtcclxuICAgIHJldHVybiBvcmRlclxyXG4gICAgLnJlZHVjZSgoa2VlcCwgY3VycmVudCkgPT4oa2VlcCtjdXJyZW50LnRvdGFsKSwgMClcclxufVxyXG5cclxuXHJcbmNvbnN0IGdldE9yZGVyRGF0YSA9IChvcmRlcnM6T3JkZXJbXSk6T3JkZXJUb1VzZVtdID0+IHtcclxuICAgIHJldHVybiBvcmRlcnMubWFwKChvcmRlcik9Pih7XHJcbiAgICAgICAgbmFtZTpvcmRlci5jbGllbnROYW1lLFxyXG4gICAgICAgIGJyZWFkQ291bnQ6b3JkZXIuYnJlYWRcclxuICAgICAgICAucmVkdWNlKChrZWVwLCBhY3R1YWwpPT4oa2VlcCthY3R1YWwucXVhbnRpdHkpLDApLFxyXG4gICAgICAgIHZhbG9yOm9yZGVyLnRvdGFsXHJcbiAgICB9KSk7XHJcbn1cclxuXHJcbi8vICMjIFBlZ2FyIGRhZG9zIGRlIHBlZGlkb3MgZmVjaGFkb3NcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNvbGRCcmVhZHNDb3VudCgpIHtcclxuICAgIGNvbnN0IG9yZGVycyA9IGF3YWl0IGdldENsb3NlZE9yZGVycygpXHJcbiAgICBsZXQgdG90YWxCcmVhZHMgPSAwO1xyXG4gICAgaWYob3JkZXJzKXtcclxuICAgICAgICB0b3RhbEJyZWFkcyArPSBhd2FpdCBnZXRCcmVhZHNDb3VudChvcmRlcnMpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG90YWxCcmVhZHM7XHJcbiAgICBcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNvbGRCcmVhZHNWYWx1ZSgpIHtcclxuICAgIFxyXG4gICAgY29uc3Qgb3JkZXJzID0gYXdhaXQgZ2V0Q2xvc2VkT3JkZXJzKClcclxuICAgIGxldCB0b3RhbEJyZWFkcyA9IDA7XHJcbiAgICBpZihvcmRlcnMpe1xyXG4gICAgICAgIHRvdGFsQnJlYWRzICs9IGF3YWl0IGdldEJyZWFkc1ZhbHVlcyhvcmRlcnMpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG90YWxCcmVhZHM7XHJcbn1cclxuXHJcbi8vICMjIFBlZ2FyIGRhZG9zIGRlIHBlZGlkb3MgZW0gYWJlcnRvXHJcblxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlY2VpdmVPcGVuT3JkZXJzKCk6UHJvbWlzZTxPcmRlclRvVXNlW10+e1xyXG4gICAgY29uc3Qgb3JkZXJzID0gYXdhaXQgZ2V0T3Blbk9yZGVycygpO1xyXG4gICAgY29uc3QgbWluaW1pemVkT3JkZXJzID0gZ2V0T3JkZXJEYXRhKG9yZGVycyk7XHJcbiAgICByZXR1cm4gbWluaW1pemVkT3JkZXJzO1xyXG59Il0sIm5hbWVzIjpbImF4aW9zIiwiZ2V0Q2xvc2VkT3JkZXJzIiwicmVzcG9uc2UiLCJnZXQiLCJkYXRhIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiZ2V0T3Blbk9yZGVycyIsImdldEJyZWFkc0NvdW50Iiwib3JkZXIiLCJ0b3RhbEJyZWFkcyIsImZvckVhY2giLCJicmVhZCIsInF1YW50aXR5IiwiZ2V0QnJlYWRzVmFsdWVzIiwicmVkdWNlIiwia2VlcCIsImN1cnJlbnQiLCJ0b3RhbCIsImdldE9yZGVyRGF0YSIsIm9yZGVycyIsIm1hcCIsIm5hbWUiLCJjbGllbnROYW1lIiwiYnJlYWRDb3VudCIsImFjdHVhbCIsInZhbG9yIiwiZ2V0U29sZEJyZWFkc0NvdW50IiwiZ2V0U29sZEJyZWFkc1ZhbHVlIiwicmVjZWl2ZU9wZW5PcmRlcnMiLCJtaW5pbWl6ZWRPcmRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/server/GETOrder.service.ts\n"));

/***/ })

});